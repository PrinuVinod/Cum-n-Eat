<!-- views/menu.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Menu | Tasty</title>
  <style>
        body {
        font-family: 'Arial', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #080808;
        color: #fff;
        }

        header {
        background-color: #000;
        color: #fff;
        padding: 10px 20px;
        text-align: center;
        }

        nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        }

        .restaurant-name {
        font-size: 1.5em;
        font-weight: bold;
        }

        .options-dropdown {
        display: flex;
        align-items: center;
        }

        .options-dropdown a {
        color: #fff;
        text-decoration: none;
        padding: 10px;
        margin: 0 10px;
        display: none;
        }

        .hamburger-menu {
        font-size: 1.5em;
        cursor: pointer;
        }

        .main-container {
        max-width: 800px;
        margin: 20px auto;
        background-color: black;
        padding: 10px;
        }

        table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        color: #fff;
        }

        th, td {
        border: 1px solid orange;
        padding: 8px;
        text-align: left;
        }

        th {
        background-color: orange;
        color: #fff;
        }

        tbody tr:nth-child(even) {
        background-color: black;
        }

        input[type="number"] {
        width: 50px;
        color: #000;
        }

        button {
        background-color: orange;
        color: #fff;
        border: none;
        padding: 8px 16px;
        cursor: pointer;
        }

        button:hover {
        background-color: white;
        color: black;
        }

        form {
        text-align: center;
        margin-top: 20px;
        }
        
        select {
        background-color: black;
        color: #fff;
        }

        @media only screen and (max-width: 600px) {
        .options-dropdown a {
            display: block;
        }

        .options-dropdown.active {
            display: flex;
        }

        .options-dropdown {
            display: none;
            width: 100%;
        }

        .restaurant-name {
            margin-bottom: 10px;
        }
        }
    </style>
</head>
<body>
  <script>
    var menu = [];
    var tableNumbers = [1, 2, 3, 4, 5];
    var selectedTableNumber;

    if (typeof serverMenu !== 'undefined') {
      menu = serverMenu;
    }
  </script>
  <header>
    <nav>
      <div class="restaurant-name">Tasty</div>
      <div style="display: flex;">
        <div class="options-dropdown">
          <div style="height: auto;">
            <!-- <label style="margin-right: 2px;" for="category-dropdown">Select Category: </label> -->
            <select style="margin-right: 10px; background-color: white; color: black; border-color: orange; border-radius: 5px; height: 35px;" id="category-dropdown" onchange="filterMenu(this.value)">
              <option value="all">Select Category</option>
              <option value="soups">Soups</option>
              <option value="starters">Starters</option>
              <option value="breads">Breads</option>
              <option value="maincourse">Main Course</option>
              <option value="snacks">Snacks</option>
              <option value="desserts">Desserts</option>
              <option value="drinks">Drinks</option>
            </select>
          </div>
        </div>
        <input style="border-color: orange; margin-right: 10px; border-radius: 5px;" type="text" id="search-input" oninput="searchMenu()" placeholder="Search Item">
        <!-- <button style="margin-right: 10px; border-radius: 5px;" onclick="callWaiter()">Call Waiter</button> -->
        <button style="border-radius: 5px;" onclick="reviewOrder()">Review Order</button>
      </div>
    </nav>
  </header>

  <main>
    <table>
      <thead>
        <tr>
          <th colspan="4" style="border-color: #000; border-radius: 10px;">
            <div style="text-align: center; margin-bottom: 10px; font-size: 25px;">
              <label for="table-number-dropdown">Selected Table Number: </label>
              <select disabled style="font-size: 25px; background-color: black; color: white; border-color: orange; border-radius: 5px; -webkit-appearance: none; width: 50px; text-align: center;" id="table-number-dropdown" data-table-number="<%= tableNumbers[0] %>">
                <% tableNumbers.forEach(number => { %>
                  <option value="<%= number %>"><%= number %></option>
                <% }); %>
              </select>
            </div>
          </th>
        </tr>
        <tr>
          <th style="border-color: black;">Item Name</th>
          <th style="border-color: black;">Price</th>
          <th style="border-color: black;">Quantity</th>
          <th style="border-color: black;">Add to Order</th>
        </tr>
      </thead>
      <tbody>
        <% menu.forEach(item => { %>
          <tr data-category="<%= item.category %>">
            <td><%= item.name %></td>
            <td>INR <%= item.price.toFixed(2) %></td>
            <td><input style="border-radius: 5px;" type="number" min="1" value="1" data-item="<%= item.name %>"></td>
            <td><button style="border-radius: 5px;" onclick="addToOrder('<%= item.name %>')">Add</button></td>
          </tr>
        <% }); %>
      </tbody>
    </table>
  </main>
  <script>
    var menu = [];
    var tableNumbers = [1, 2, 3, 4, 5];
    var selectedTableNumber;

    function getTableNumberFromPrompt() {
      const tableNumber = prompt('Welcome This is the Menu Page. Please enter your table number:');
      return tableNumber;
    }

    function setInitialTableNumber() {
      selectedTableNumber = getTableNumberFromPrompt();
      if (
        selectedTableNumber === null ||
        selectedTableNumber.trim() === '' ||
        !tableNumbers.includes(parseInt(selectedTableNumber))
      ) {
        window.location.href = '/menu';
      } else {
        const tableNumberDropdown = document.getElementById('table-number-dropdown');
        tableNumberDropdown.value = selectedTableNumber;

        filterMenu('all');
      }
    }

    window.addEventListener('load', setInitialTableNumber);

    function addToOrder(itemName) {
      const item = menu.find(item => item.name === itemName);

      const quantityInput = document.querySelector(`input[data-item="${itemName}"]`);
      const quantity = parseInt(quantityInput.value, 10);
      if (isNaN(quantity) || quantity < 1) {
        console.error('Invalid quantity');
        return;
      }

      const tableNumberDropdown = document.getElementById('table-number-dropdown');
      const selectedTableNumber = parseInt(tableNumberDropdown.value, 10);

      console.log('Data to be sent:', { itemName, quantity, tableNumber: selectedTableNumber });

      const formData = new FormData();
      formData.append('itemName', itemName);
      formData.append('quantity', quantity);
      formData.append('tableNumber', selectedTableNumber);

      fetch('/menu/add-to-order', {
        method: 'POST',
        body: formData,
      })
        .then(response => response.json())
        .then(data => {
          if (data.error) {
            console.error('Error adding item to order:', data.error);
          } else {
            console.log('Item added to order:', data);
          }
        })
        .catch(error => {
          console.error('Error adding item to order:', error);
        });
    }

    function toggleOptions() {
      const optionsDropdown = document.querySelector('.options-dropdown');
      optionsDropdown.classList.toggle('active');
    }

    function filterMenu(category) {
      const tableRows = document.querySelectorAll('tbody tr');
      
      tableRows.forEach(row => {
        const itemCategory = row.getAttribute('data-category');
        if (category === 'all' || itemCategory === category) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
    }

    function searchMenu() {
      const searchInput = document.getElementById('search-input');
      const searchTerm = searchInput.value.toLowerCase();

      const tableRows = document.querySelectorAll('tbody tr');

      tableRows.forEach(row => {
        const itemName = row.querySelector('td:first-child').textContent.toLowerCase();
        if (itemName.includes(searchTerm)) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
    }

    function callWaiter() {
        console.log('Calling waiter...');
      }

    function reviewOrder() {
      window.location.href = '/menu/get-orders';
    }
  </script>
</body>
</html>
