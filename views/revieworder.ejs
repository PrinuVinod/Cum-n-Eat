<!-- views/revieworder.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Review Order | Tasty</title>
    <style>
        body {
        font-family: 'Arial', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #080808;
        color: #fff;
        }

        header {
        background-color: #000;
        color: #fff;
        padding: 10px 20px;
        text-align: center;
        }

        nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        }

        .restaurant-name {
        font-size: 1.5em;
        font-weight: bold;
        }

        .options-dropdown {
        display: flex;
        align-items: center;
        }

        .options-dropdown a {
        color: #fff;
        text-decoration: none;
        padding: 10px;
        margin: 0 10px;
        display: none;
        }

        .hamburger-menu {
        font-size: 1.5em;
        cursor: pointer;
        }

        .main-container {
        max-width: 800px;
        margin: 20px auto;
        background-color: black;
        padding: 10px;
        }

        table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        color: #fff;
        }

        th, td {
        border: 1px solid orange;
        padding: 8px;
        text-align: left;
        }

        th {
        background-color: orange;
        color: #fff;
        }

        tbody tr:nth-child(even) {
        background-color: black;
        }

        input[type="number"] {
        width: 50px;
        color: #000;
        }

        button {
        background-color: orange;
        color: #fff;
        border: none;
        padding: 8px 16px;
        cursor: pointer;
        }

        button:hover {
        background-color: white;
        color: black;
        }

        form {
        text-align: center;
        margin-top: 20px;
        }
        
        select {
        background-color: black;
        color: #fff;
        }

        @media only screen and (max-width: 600px) {
        .options-dropdown a {
            display: block;
        }

        .options-dropdown.active {
            display: flex;
        }

        .options-dropdown {
            display: none;
            width: 100%;
        }

        .restaurant-name {
            margin-bottom: 10px;
        }
        }
    </style>
</head>
<body>
    <header>
        <nav>
            <div class="restaurant-name">Tasty</div>
            <div style="display: flex;">
            <!-- <button style="margin-right: 10px; border-radius: 5px;" onclick="callWaiter()">Call Waiter</button> -->
            <button style="border-radius: 5px;" onclick="backtoMenu()">Menu</button>
            </div>
        </nav>
    </header>
    <main>
        <h1 style="text-align: center;"></h1>
        <table>
            <thead>
                <tr>
                    <th style="border-color: black;">Item Name</th>
                    <th style="border-color: black;">Quantity</th>
                    <th style="border-color: black;">Action</th>
                </tr>
            </thead>
            <tbody>
                <% orderList.forEach(order => { %>
                    <tr data-table-number="<%= order.tableNumber %>">
                        <td><%= order.itemName %></td>
                        <td><%= order.quantity %></td>
                        <td>
                            <button style="border-radius: 5px;" onclick="deleteOrder('<%= order._id %>')">Delete</button>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
        <div style="text-align: center; margin-top: 20px;">
            <h2>Total Amount: INR <span id="total-amount">0.00</span></h2>
        </div>
        <div style="text-align: center; margin-top: 20px;">
            <button style="border-radius: 5px;" onclick="submitOrder()">Submit Order</button>
        </div>
    </main>
    <script>
        function getTableNumberFromConsole() {
            const tableNumber = prompt('Please Review your Order by Entering your Table Number:');
            return tableNumber;
        }
        const selectedTableNumber = getTableNumberFromConsole();
        if (selectedTableNumber === null || selectedTableNumber.trim() === '' || selectedTableNumber > 5 || selectedTableNumber < 1) {
            window.location.href = '/menu';
        } else {
            filterOrders(selectedTableNumber);
            fetchTotalAmount(selectedTableNumber);
        }

        function fetchTotalAmount(tableNumber) {
            fetch(`/toorder/get-total-amount/${tableNumber}`)
            .then(response => response.json())
            .then(data => {
            console.log('Total Amount Data:', data);

            if (typeof data.totalAmount === 'number') {
                const totalAmountElement = document.getElementById('total-amount');
                totalAmountElement.textContent = data.totalAmount.toFixed(2);
            } else {
                console.error('Invalid total amount:', data.totalAmount);
            }
            })
            .catch(error => {
            console.error('Error fetching total amount:', error);
            });
        }

        function filterOrders(selectedTableNumber) {
            document.querySelector('h1').innerText = `Review Order for Table ${selectedTableNumber}`;
            const tableRows = document.querySelectorAll('tbody tr');
            tableRows.forEach(row => {
                const rowTableNumber = row.getAttribute('data-table-number');
                if (selectedTableNumber === 'all' || rowTableNumber === selectedTableNumber) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        function submitOrder() {
        fetch('/toorder/submit-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: 'submit=true',
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`Network response was not ok: ${response.status} ${response.statusText}`);
            }
            return response.text();
        })
        .then(responseHTML => {
            console.log(responseHTML);
            
            document.body.innerHTML = responseHTML;
        })
        .catch(error => {
            console.error('Error submitting order:', error);
        });
    }

        function duplicateToKitchenView(orderList) {
            const data = { orders: orderList };

            fetch('/menu/duplicate-to-kitchenview', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
            })
            .then(response => response.json())
            .then(result => {
                console.log('Order data duplicated to kitchenview collection:', result);
            })
            .catch(error => {
                console.error('Error duplicating order data:', error);
            });
        }

        function clearOrdersCollection() {
            fetch('/menu/clear-orders', {
            method: 'DELETE',
            })
            .then(response => response.json())
            .then(result => {
                console.log('Order data cleared from orders collection:', result);

                fetchOrderData();
            })
            .catch(error => {
                console.error('Error clearing order data:', error);
            });
        }
        
        function deleteOrder(orderId) {
            fetch(`/menu/delete-order/${orderId}`, {
                method: 'DELETE',
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Network response was not ok: ${response.status} ${response.statusText}`);
                }
                console.log('Item Deleted From Order.');
                location.reload();
            })
            .catch(error => {
                console.error('Error Deleting Order.', error);
            });
        }
        
        function backtoMenu() {
            window.location.href = '/menu';
        }
    </script>
</body>
</html>