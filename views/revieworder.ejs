<!-- views/revieworder.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Review Order | Cum 'n Eat</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #080808;
            color: #fff;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        header {
            background-color: #000;
            color: #fff;
            padding: 10px 20px;
            text-align: center;
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
        }

        .restaurant-name {
            font-size: 1.5em;
            font-weight: bold;
        }

        .options-dropdown {
            display: flex;
            align-items: center;
        }

        .options-dropdown a {
            color: #fff;
            text-decoration: none;
            padding: 10px;
            margin: 0 10px;
            display: none;
        }

        .hamburger-menu {
            font-size: 1.5em;
            cursor: pointer;
        }

        main {
            flex: 1;
            max-width: 800px;
            margin: 20px auto;
            background-color: black;
            padding: 10px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            color: #fff;
        }

        th, td {
            border: 1px solid orange;
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: orange;
            color: #fff;
        }

        tbody tr:nth-child(even) {
            background-color: black;
        }

        input[type="number"] {
            width: 50px;
            color: #000;
        }

        button {
            background-color: orange;
            color: #fff;
            border: none;
            padding: 8px 16px;
            cursor: pointer;
        }

        button:hover {
            background-color: white;
            color: black;
        }

        form {
            text-align: center;
            margin-top: 20px;
        }

        select {
            background-color: black;
            color: #fff;
        }

        @media only screen and (max-width: 600px) {
        .options-dropdown a {
            display: block;
        }

        .options-dropdown.active {
            display: flex;
        }

        .options-dropdown {
            display: none;
            width: 100%;
        }

        .restaurant-name {
            margin-bottom: 10px;
        }
        }

        footer {
            background-color: orange;
            margin-top: 20px;
            color: black;
            padding: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <header>
        <nav>
            <div class="restaurant-name">Cum 'n Eat</div>
            <div style="display: flex;">
            <!-- <button style="margin-right: 10px; border-radius: 5px;" onclick="callWaiter()">Call Waiter</button> -->
            <button style="border-radius: 5px;" onclick="backtoMenu()">Menu</button>
            </div>
        </nav>
    </header>
    
    <main>
        <h1 style="text-align: center;"></h1>
        <table>
            <thead>
                <tr>
                    <th style="border-color: black;">Item Name</th>
                    <th style="border-color: black;">Quantity</th>
                    <th style="border-color: black;">Action</th>
                </tr>
            </thead>
            <tbody>
                <% orderList.forEach(order => { %>
                    <tr data-table-number="<%= order.tableNumber %>">
                        <td><%= order.itemName %></td>
                        <td><%= order.quantity %></td>
                        <td>
                            <button style="border-radius: 5px;" onclick="deleteOrder('<%= order._id %>')">Delete</button>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
        <div style="text-align: center; margin-top: 20px;">
            <h2>Total Amount: INR <span id="total-amount">0.00</span></h2>
        </div>
        <div style="text-align: center; margin-top: 20px;">
            <button style="border-radius: 5px;" onclick="submitOrder()">Submit Order</button>
        </div>
        <div style="margin-top: 20px; text-align: center; background-color: #FF6347; padding: 10px; width: 80%; margin-left: auto; margin-right: auto; border-radius: 10px;">
            <p style="color: #fff; font-size: 16px; font-weight: bold; margin: 0;">
                <strong>Note:</strong> Once your order is submitted, you are not allowed to change the existing items. However, you can add more items to your order if needed.
            </p>
        </div>
    </main>

    <footer>
        <p>&copy; 2024 Cum 'n Eat. All rights reserved.</p>
        <p>Kollam | Kottayam, Kerala, India</p>
        <p><a style="color: #fff;" href="mailto:cumneat@gmail.com">cumneat@gmail.com</a></p>
    </footer>

    <script>
        function getTableNumberFromConsole() {
            const tableNumber = prompt('Please Review your Order by Entering your Table Number:');
            return tableNumber;
        }
        const selectedTableNumber = getTableNumberFromConsole();
        if (selectedTableNumber === null || selectedTableNumber.trim() === '' || selectedTableNumber > 5 || selectedTableNumber < 1) {
            window.location.href = '/menu';
        } else {
            filterOrders(selectedTableNumber);
            fetchTotalAmount(selectedTableNumber);
        }

        function submitOrder() {
            console.log('Submitting order for table:', selectedTableNumber);

            fetch(`/toorder/submit-order/${selectedTableNumber}`, {
                method: 'POST',
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Network response was not ok: ${response.status} ${response.statusText}`);
                }
                console.log('Order submitted successfully.');
                window.location.href = '/menu';
            })
            .catch(error => {
                console.error('Error submitting order.', error);
            });
        }

        function fetchTotalAmount(tableNumber) {
            fetch(`/toorder/get-total-amount/${tableNumber}`)
            .then(response => response.json())
            .then(data => {
            console.log('Total Amount Data:', data);

            if (typeof data.totalAmount === 'number') {
                const totalAmountElement = document.getElementById('total-amount');
                totalAmountElement.textContent = data.totalAmount.toFixed(2);
            } else {
                console.error('Invalid total amount:', data.totalAmount);
            }
            })
            .catch(error => {
            console.error('Error fetching total amount:', error);
            });
        }

        function filterOrders(selectedTableNumber) {
            document.querySelector('h1').innerText = `Review Order for Table ${selectedTableNumber}`;
            const tableRows = document.querySelectorAll('tbody tr');
            tableRows.forEach(row => {
                const rowTableNumber = row.getAttribute('data-table-number');
                if (selectedTableNumber === 'all' || rowTableNumber === selectedTableNumber) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }
        
        function deleteOrder(orderId) {
            fetch(`/menu/delete-order/${orderId}`, {
                method: 'DELETE',
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Network response was not ok: ${response.status} ${response.statusText}`);
                }
                console.log('Item Deleted From Order.');
                location.reload();
            })
            .catch(error => {
                console.error('Error Deleting Order.', error);
            });
        }
        
        function backtoMenu() {
            window.location.href = '/menu';
        }
    </script>
</body>
</html>